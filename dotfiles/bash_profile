# shellcheck source=dotfiles/bashrc

. "${HOME}/.bashrc"

############################################ prompt #############################################
if [[ $(whoami) == "root" ]]; then
    PS1="${debian_chroot:+($debian_chroot)}\[\e[104m\]\A\[\e[0m\] \[\e[41m\]\u@\H\[\e[0m\] @ \w \n\[\e[41m\]#\[\e[0m\] "
else
    PS1="${debian_chroot:+($debian_chroot)}\[\e[104m\]\t\[\e[0m\]\[\e[46m\] \u \[\e[0m\]\[\e[44m\] \w \[\e[0m\]\[\e[47m\]\[\e[0;33;47m\]\$(parse_git_branch)\[\e[0;0m\]\[\e[1;34;47m\]$(parse_languages)\[\e[0;0m\]\$ "
fi

# iTerm integration
[ -e "$HOME/.iterm2_shell_integration.bash" ] && . "$HOME/.iterm2_shell_integration.bash"

# INTERACTIVE_BASHPID_TIMER="/tmp/${USER}.START.$$"
# PS0='$(echo $SECONDS > "$INTERACTIVE_BASHPID_TIMER")'

__update_ps1() {
    local __ERROR_CODE="${__bp_last_ret_value:-$?}"

    # local __DURATION=0
    # if [ -e $INTERACTIVE_BASHPID_TIMER ]; then
    #     local __END=$SECONDS
    #     local __START=$(cat "$INTERACTIVE_BASHPID_TIMER")
    #     __DURATION="$(($__END - ${__START:-__END}))"
    #     rm -f "$INTERACTIVE_BASHPID_TIMER"
    # fi

    _LANGS_ENV="$(parse_languages)"
    export _LANGS_ENV

    local mods="cwd,perms,git,shell-var,goenv,docker,docker-context,jobs,exit,root"
    local args="-shell-var _LANGS_ENV"

    if [ -n "$SSH_CONNECTION" ]; then
        mods="termtitle,time,cwd,perms,load,shell-var,dotenv,host,user,jobs,exit,ssh,root"
    fi

    eval "$(
        ~/bin/powerline-go \
            -newline \
            -cwd-mode semifancy \
            -hostname-only-if-ssh \
            -ignore-warnings \
            -shell-var-no-warn-empty \
            -error $__ERROR_CODE \
            -jobs $(jobs -r | wc -l) \
            -eval \
            -shell bash \
            -modules $mods $args
    )"
}

if [ "$TERM" != "linux" ] && [ -f "$HOME/bin/powerline-go" ]; then
    PROMPT_COMMAND="__update_ps1; $PROMPT_COMMAND"
fi

############################################ prompt #############################################
